var basketProductIds = []
var basketProducts = []
var allProducts = [
	{ id: 1, name: 'Blue jacket', price: '$343', oldPrice: '$434', brandName: 'BlueCloth' },
	{ id: 2, name: 'Green jacket', price: '$545', oldPrice: '', brandName: 'GreenCloth' },
	{ id: 3, name: 'Red jacket', price: '$767', oldPrice: '$878', brandName: 'RedCloth' }
]

function addToCart(product_id) {
	var productAdded = basketProducts.find(function(e) { return e.id == product_id })
	if(productAdded) {
		productAdded.qty += 1
	} else {
		var product = allProducts.find(function(e) { return e.id == product_id })
		basketProducts.push(Object.assign(product, { qty: 1 }))
	}
  $.post("/api", {
    TYPE: "ADD_TO_CART",
    PRODUCT_ID: product_id
  })
  setBadge()
}

function removeFromCart(product_id) {
	basketProducts = basketProducts.filter(function(e) { return e.id != product_id })
  $.post("/api", {
    TYPE: "REMOVE_FROM_CART",
    PRODUCT_ID: product_id
  })
  setBadge()
}

function getQty(){
  return basketProducts.length;
}

function setBadge() {
  var qty = getQty();
  if(qty === 0) {
    $('.product-count').css('display','none')
    return
  }
  
  $('.product-count').find('i').text(qty)
  $('.product-count').css('display','inline')
}


function decQty(product_id) {
	var productAdded = basketProducts.find(function(e) { return e.id == product_id })
	if(productAdded) {
		productAdded.qty -= 1
		if(productAdded.qty <= 0) {
			removeFromCart(product_id)
		}
	}
}

function decQty(product_id) {
	var productAdded = basketProducts.find(function(e) { return e.id == product_id })
	if(productAdded) {
		productAdded.qty -= 1
	}
  
  setBadge()
}

function incrQty(product_id) {
	var productAdded = basketProducts.find(function(e) { return e.id == product_id })
	if(productAdded) {
		productAdded.qty += 1
	}
  setBadge()
}

function renderProducts() {
	var template = $('.card-template').html()

	$('.product-list').empty()
	allProducts.forEach(function(e) {
		var newProduct = $(template)
    console.log(newProduct)
		newProduct.on('click', function(event) {
			event.preventDefault()
			addToCart(e.id)
		})
    newProduct.find('div.card__image').css('background-image','url(./img/product_'+e.id+'.jpg)')
		newProduct.find('h2').text(e.name)
    newProduct.find('span.card__new-price').text(e.price)
    newProduct.find('span.card__old-price').text(e.oldPrice)
    newProduct.find('a.card__brand-name').text(e.brandName)
		$('.product-list').append(newProduct)
	})
}

function renderBasket() {
	var template = $('.basket-template').html()

	$('.basket-products').empty()
	basketProducts.forEach(function(e) {
		var newItem = $(template)
		newItem.find('.shopping-cart__description span').text(e.name)
		newItem.find('input').val(e.qty)
    newItem.attr('id', e.id)
    newItem.find('.shopping-cart__item__image').attr('src', './img/product_'+e.id+'.jpg')
    newItem.find('.shopping-cart__total-price').text(e.price)
		$('.basket-products').append(newItem)
	})
  
  // quantity
  $('.shopping-cart__minus-btn').on('click', function(e) {
      e.preventDefault();
      var $this = $(this);
      var $input = $this.closest('div').find('input');
      var value = parseInt($input.val());
      var id = $(this).closest('.shopping-cart__item').attr('id');

      if (value > 1) {
          value = value - 1;
          decQty(parseInt(id, 10))
      } else {
          value = 1;
      }
      
      $.post("/api", {
        TYPE: "CHANGE_QUANTITY",
        PRODUCT_ID: id,
        NEW_QUANTITY: value
      })

    $input.val(value);


  });

  $('.shopping-cart__plus-btn').on('click', function(e) {
      e.preventDefault();
      var $this = $(this);
      var $input = $this.closest('div').find('input');
      var value = parseInt($input.val());

      if (value < 100) {
          value = value + 1;
      } else {
          value = 100;
      }
      
      var id = $(this).closest('.shopping-cart__item').attr('id');
      incrQty(parseInt(id, 10))
      
      $.post("/api", {
        TYPE: "CHANGE_QUANTITY",
        PRODUCT_ID: id,
        NEW_QUANTITY: value
      })

      $input.val(value);
  });
  
  // delete product
  $('.shopping-cart__delete-btn').on('click', function(e) {
    e.preventDefault();
    var id = $(this).closest('.shopping-cart__item').attr('id');
    removeFromCart(parseInt(id, 10))
    $(this).closest(".shopping-cart__item").remove()
  })
}

$(document).ready(function() {
	renderProducts()

	$('[class*=popup-link]').click(function(e) {
		renderBasket()
		
		e.preventDefault();
		e.stopPropagation();

		var name = $(this).attr('class');
		var id = name[name.length - 1];
		var scrollPos = $(window).scrollTop();

		/* Show the correct popup box, show the blackout and disable scrolling */
		if ($('body').hasScrollBar()) {
      $('body').css('padding-right', '15px');
    };
    $('#popup-box').animate({height: 'show'}, 300);
		$('#blackout').show();
		$('body').addClass('modal-open');

		/* Fixes a bug in Firefox */
		$('html').scrollTop(scrollPos);
	});
	$('[class*=popup-box]').click(function(e) {
		/* Stop the link working normally on click if it's linked to a popup */
		e.stopPropagation();
	});
	$('html').click(function() {
		var scrollPos = $(window).scrollTop();
		/* Hide the popup and blackout when clicking outside the popup */
		$('body').css('padding-right', '0');
    $('body').removeClass('modal-open');
    $('#popup-box').animate({height: 'hide'}, 100);
		$('#blackout').hide();
		$('html').scrollTop(scrollPos);
	});
	$('.close').click(function() {
		var scrollPos = $(window).scrollTop();
		/* Similarly, hide the popup and blackout when the user clicks close */
    $('body').removeClass('modal-open');
    $('#popup-box').animate({height: 'hide'}, 0);
    $('body').css('padding-right', '0');
		$('#blackout').hide();
		$('html').scrollTop(scrollPos);
	});
});

(function($) {
    $.fn.hasScrollBar = function() {
        return this.get(0).scrollHeight > this.height();
    }
})(jQuery);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcGxpY2F0aW9uLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNrZXRQcm9kdWN0SWRzID0gW11cbnZhciBiYXNrZXRQcm9kdWN0cyA9IFtdXG52YXIgYWxsUHJvZHVjdHMgPSBbXG5cdHsgaWQ6IDEsIG5hbWU6ICdCbHVlIGphY2tldCcsIHByaWNlOiAnJDM0MycsIG9sZFByaWNlOiAnJDQzNCcsIGJyYW5kTmFtZTogJ0JsdWVDbG90aCcgfSxcblx0eyBpZDogMiwgbmFtZTogJ0dyZWVuIGphY2tldCcsIHByaWNlOiAnJDU0NScsIG9sZFByaWNlOiAnJywgYnJhbmROYW1lOiAnR3JlZW5DbG90aCcgfSxcblx0eyBpZDogMywgbmFtZTogJ1JlZCBqYWNrZXQnLCBwcmljZTogJyQ3NjcnLCBvbGRQcmljZTogJyQ4NzgnLCBicmFuZE5hbWU6ICdSZWRDbG90aCcgfVxuXVxuXG5mdW5jdGlvbiBhZGRUb0NhcnQocHJvZHVjdF9pZCkge1xuXHR2YXIgcHJvZHVjdEFkZGVkID0gYmFza2V0UHJvZHVjdHMuZmluZChmdW5jdGlvbihlKSB7IHJldHVybiBlLmlkID09IHByb2R1Y3RfaWQgfSlcblx0aWYocHJvZHVjdEFkZGVkKSB7XG5cdFx0cHJvZHVjdEFkZGVkLnF0eSArPSAxXG5cdH0gZWxzZSB7XG5cdFx0dmFyIHByb2R1Y3QgPSBhbGxQcm9kdWN0cy5maW5kKGZ1bmN0aW9uKGUpIHsgcmV0dXJuIGUuaWQgPT0gcHJvZHVjdF9pZCB9KVxuXHRcdGJhc2tldFByb2R1Y3RzLnB1c2goT2JqZWN0LmFzc2lnbihwcm9kdWN0LCB7IHF0eTogMSB9KSlcblx0fVxuICAkLnBvc3QoXCIvYXBpXCIsIHtcbiAgICBUWVBFOiBcIkFERF9UT19DQVJUXCIsXG4gICAgUFJPRFVDVF9JRDogcHJvZHVjdF9pZFxuICB9KVxuICBzZXRCYWRnZSgpXG59XG5cbmZ1bmN0aW9uIHJlbW92ZUZyb21DYXJ0KHByb2R1Y3RfaWQpIHtcblx0YmFza2V0UHJvZHVjdHMgPSBiYXNrZXRQcm9kdWN0cy5maWx0ZXIoZnVuY3Rpb24oZSkgeyByZXR1cm4gZS5pZCAhPSBwcm9kdWN0X2lkIH0pXG4gICQucG9zdChcIi9hcGlcIiwge1xuICAgIFRZUEU6IFwiUkVNT1ZFX0ZST01fQ0FSVFwiLFxuICAgIFBST0RVQ1RfSUQ6IHByb2R1Y3RfaWRcbiAgfSlcbiAgc2V0QmFkZ2UoKVxufVxuXG5mdW5jdGlvbiBnZXRRdHkoKXtcbiAgcmV0dXJuIGJhc2tldFByb2R1Y3RzLmxlbmd0aDtcbn1cblxuZnVuY3Rpb24gc2V0QmFkZ2UoKSB7XG4gIHZhciBxdHkgPSBnZXRRdHkoKTtcbiAgaWYocXR5ID09PSAwKSB7XG4gICAgJCgnLnByb2R1Y3QtY291bnQnKS5jc3MoJ2Rpc3BsYXknLCdub25lJylcbiAgICByZXR1cm5cbiAgfVxuICBcbiAgJCgnLnByb2R1Y3QtY291bnQnKS5maW5kKCdpJykudGV4dChxdHkpXG4gICQoJy5wcm9kdWN0LWNvdW50JykuY3NzKCdkaXNwbGF5JywnaW5saW5lJylcbn1cblxuXG5mdW5jdGlvbiBkZWNRdHkocHJvZHVjdF9pZCkge1xuXHR2YXIgcHJvZHVjdEFkZGVkID0gYmFza2V0UHJvZHVjdHMuZmluZChmdW5jdGlvbihlKSB7IHJldHVybiBlLmlkID09IHByb2R1Y3RfaWQgfSlcblx0aWYocHJvZHVjdEFkZGVkKSB7XG5cdFx0cHJvZHVjdEFkZGVkLnF0eSAtPSAxXG5cdFx0aWYocHJvZHVjdEFkZGVkLnF0eSA8PSAwKSB7XG5cdFx0XHRyZW1vdmVGcm9tQ2FydChwcm9kdWN0X2lkKVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBkZWNRdHkocHJvZHVjdF9pZCkge1xuXHR2YXIgcHJvZHVjdEFkZGVkID0gYmFza2V0UHJvZHVjdHMuZmluZChmdW5jdGlvbihlKSB7IHJldHVybiBlLmlkID09IHByb2R1Y3RfaWQgfSlcblx0aWYocHJvZHVjdEFkZGVkKSB7XG5cdFx0cHJvZHVjdEFkZGVkLnF0eSAtPSAxXG5cdH1cbiAgXG4gIHNldEJhZGdlKClcbn1cblxuZnVuY3Rpb24gaW5jclF0eShwcm9kdWN0X2lkKSB7XG5cdHZhciBwcm9kdWN0QWRkZWQgPSBiYXNrZXRQcm9kdWN0cy5maW5kKGZ1bmN0aW9uKGUpIHsgcmV0dXJuIGUuaWQgPT0gcHJvZHVjdF9pZCB9KVxuXHRpZihwcm9kdWN0QWRkZWQpIHtcblx0XHRwcm9kdWN0QWRkZWQucXR5ICs9IDFcblx0fVxuICBzZXRCYWRnZSgpXG59XG5cbmZ1bmN0aW9uIHJlbmRlclByb2R1Y3RzKCkge1xuXHR2YXIgdGVtcGxhdGUgPSAkKCcuY2FyZC10ZW1wbGF0ZScpLmh0bWwoKVxuXG5cdCQoJy5wcm9kdWN0LWxpc3QnKS5lbXB0eSgpXG5cdGFsbFByb2R1Y3RzLmZvckVhY2goZnVuY3Rpb24oZSkge1xuXHRcdHZhciBuZXdQcm9kdWN0ID0gJCh0ZW1wbGF0ZSlcbiAgICBjb25zb2xlLmxvZyhuZXdQcm9kdWN0KVxuXHRcdG5ld1Byb2R1Y3Qub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KClcblx0XHRcdGFkZFRvQ2FydChlLmlkKVxuXHRcdH0pXG4gICAgbmV3UHJvZHVjdC5maW5kKCdkaXYuY2FyZF9faW1hZ2UnKS5jc3MoJ2JhY2tncm91bmQtaW1hZ2UnLCd1cmwoLi9pbWcvcHJvZHVjdF8nK2UuaWQrJy5qcGcpJylcblx0XHRuZXdQcm9kdWN0LmZpbmQoJ2gyJykudGV4dChlLm5hbWUpXG4gICAgbmV3UHJvZHVjdC5maW5kKCdzcGFuLmNhcmRfX25ldy1wcmljZScpLnRleHQoZS5wcmljZSlcbiAgICBuZXdQcm9kdWN0LmZpbmQoJ3NwYW4uY2FyZF9fb2xkLXByaWNlJykudGV4dChlLm9sZFByaWNlKVxuICAgIG5ld1Byb2R1Y3QuZmluZCgnYS5jYXJkX19icmFuZC1uYW1lJykudGV4dChlLmJyYW5kTmFtZSlcblx0XHQkKCcucHJvZHVjdC1saXN0JykuYXBwZW5kKG5ld1Byb2R1Y3QpXG5cdH0pXG59XG5cbmZ1bmN0aW9uIHJlbmRlckJhc2tldCgpIHtcblx0dmFyIHRlbXBsYXRlID0gJCgnLmJhc2tldC10ZW1wbGF0ZScpLmh0bWwoKVxuXG5cdCQoJy5iYXNrZXQtcHJvZHVjdHMnKS5lbXB0eSgpXG5cdGJhc2tldFByb2R1Y3RzLmZvckVhY2goZnVuY3Rpb24oZSkge1xuXHRcdHZhciBuZXdJdGVtID0gJCh0ZW1wbGF0ZSlcblx0XHRuZXdJdGVtLmZpbmQoJy5zaG9wcGluZy1jYXJ0X19kZXNjcmlwdGlvbiBzcGFuJykudGV4dChlLm5hbWUpXG5cdFx0bmV3SXRlbS5maW5kKCdpbnB1dCcpLnZhbChlLnF0eSlcbiAgICBuZXdJdGVtLmF0dHIoJ2lkJywgZS5pZClcbiAgICBuZXdJdGVtLmZpbmQoJy5zaG9wcGluZy1jYXJ0X19pdGVtX19pbWFnZScpLmF0dHIoJ3NyYycsICcuL2ltZy9wcm9kdWN0XycrZS5pZCsnLmpwZycpXG4gICAgbmV3SXRlbS5maW5kKCcuc2hvcHBpbmctY2FydF9fdG90YWwtcHJpY2UnKS50ZXh0KGUucHJpY2UpXG5cdFx0JCgnLmJhc2tldC1wcm9kdWN0cycpLmFwcGVuZChuZXdJdGVtKVxuXHR9KVxuICBcbiAgLy8gcXVhbnRpdHlcbiAgJCgnLnNob3BwaW5nLWNhcnRfX21pbnVzLWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XG4gICAgICB2YXIgJGlucHV0ID0gJHRoaXMuY2xvc2VzdCgnZGl2JykuZmluZCgnaW5wdXQnKTtcbiAgICAgIHZhciB2YWx1ZSA9IHBhcnNlSW50KCRpbnB1dC52YWwoKSk7XG4gICAgICB2YXIgaWQgPSAkKHRoaXMpLmNsb3Nlc3QoJy5zaG9wcGluZy1jYXJ0X19pdGVtJykuYXR0cignaWQnKTtcblxuICAgICAgaWYgKHZhbHVlID4gMSkge1xuICAgICAgICAgIHZhbHVlID0gdmFsdWUgLSAxO1xuICAgICAgICAgIGRlY1F0eShwYXJzZUludChpZCwgMTApKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IDE7XG4gICAgICB9XG4gICAgICBcbiAgICAgICQucG9zdChcIi9hcGlcIiwge1xuICAgICAgICBUWVBFOiBcIkNIQU5HRV9RVUFOVElUWVwiLFxuICAgICAgICBQUk9EVUNUX0lEOiBpZCxcbiAgICAgICAgTkVXX1FVQU5USVRZOiB2YWx1ZVxuICAgICAgfSlcblxuICAgICRpbnB1dC52YWwodmFsdWUpO1xuXG5cbiAgfSk7XG5cbiAgJCgnLnNob3BwaW5nLWNhcnRfX3BsdXMtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgIHZhciAkaW5wdXQgPSAkdGhpcy5jbG9zZXN0KCdkaXYnKS5maW5kKCdpbnB1dCcpO1xuICAgICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoJGlucHV0LnZhbCgpKTtcblxuICAgICAgaWYgKHZhbHVlIDwgMTAwKSB7XG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZSArIDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhbHVlID0gMTAwO1xuICAgICAgfVxuICAgICAgXG4gICAgICB2YXIgaWQgPSAkKHRoaXMpLmNsb3Nlc3QoJy5zaG9wcGluZy1jYXJ0X19pdGVtJykuYXR0cignaWQnKTtcbiAgICAgIGluY3JRdHkocGFyc2VJbnQoaWQsIDEwKSlcbiAgICAgIFxuICAgICAgJC5wb3N0KFwiL2FwaVwiLCB7XG4gICAgICAgIFRZUEU6IFwiQ0hBTkdFX1FVQU5USVRZXCIsXG4gICAgICAgIFBST0RVQ1RfSUQ6IGlkLFxuICAgICAgICBORVdfUVVBTlRJVFk6IHZhbHVlXG4gICAgICB9KVxuXG4gICAgICAkaW5wdXQudmFsKHZhbHVlKTtcbiAgfSk7XG4gIFxuICAvLyBkZWxldGUgcHJvZHVjdFxuICAkKCcuc2hvcHBpbmctY2FydF9fZGVsZXRlLWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGlkID0gJCh0aGlzKS5jbG9zZXN0KCcuc2hvcHBpbmctY2FydF9faXRlbScpLmF0dHIoJ2lkJyk7XG4gICAgcmVtb3ZlRnJvbUNhcnQocGFyc2VJbnQoaWQsIDEwKSlcbiAgICAkKHRoaXMpLmNsb3Nlc3QoXCIuc2hvcHBpbmctY2FydF9faXRlbVwiKS5yZW1vdmUoKVxuICB9KVxufVxuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcblx0cmVuZGVyUHJvZHVjdHMoKVxuXG5cdCQoJ1tjbGFzcyo9cG9wdXAtbGlua10nKS5jbGljayhmdW5jdGlvbihlKSB7XG5cdFx0cmVuZGVyQmFza2V0KClcblx0XHRcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuXHRcdHZhciBuYW1lID0gJCh0aGlzKS5hdHRyKCdjbGFzcycpO1xuXHRcdHZhciBpZCA9IG5hbWVbbmFtZS5sZW5ndGggLSAxXTtcblx0XHR2YXIgc2Nyb2xsUG9zID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuXG5cdFx0LyogU2hvdyB0aGUgY29ycmVjdCBwb3B1cCBib3gsIHNob3cgdGhlIGJsYWNrb3V0IGFuZCBkaXNhYmxlIHNjcm9sbGluZyAqL1xuXHRcdGlmICgkKCdib2R5JykuaGFzU2Nyb2xsQmFyKCkpIHtcbiAgICAgICQoJ2JvZHknKS5jc3MoJ3BhZGRpbmctcmlnaHQnLCAnMTVweCcpO1xuICAgIH07XG4gICAgJCgnI3BvcHVwLWJveCcpLmFuaW1hdGUoe2hlaWdodDogJ3Nob3cnfSwgMzAwKTtcblx0XHQkKCcjYmxhY2tvdXQnKS5zaG93KCk7XG5cdFx0JCgnYm9keScpLmFkZENsYXNzKCdtb2RhbC1vcGVuJyk7XG5cblx0XHQvKiBGaXhlcyBhIGJ1ZyBpbiBGaXJlZm94ICovXG5cdFx0JCgnaHRtbCcpLnNjcm9sbFRvcChzY3JvbGxQb3MpO1xuXHR9KTtcblx0JCgnW2NsYXNzKj1wb3B1cC1ib3hdJykuY2xpY2soZnVuY3Rpb24oZSkge1xuXHRcdC8qIFN0b3AgdGhlIGxpbmsgd29ya2luZyBub3JtYWxseSBvbiBjbGljayBpZiBpdCdzIGxpbmtlZCB0byBhIHBvcHVwICovXG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fSk7XG5cdCQoJ2h0bWwnKS5jbGljayhmdW5jdGlvbigpIHtcblx0XHR2YXIgc2Nyb2xsUG9zID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuXHRcdC8qIEhpZGUgdGhlIHBvcHVwIGFuZCBibGFja291dCB3aGVuIGNsaWNraW5nIG91dHNpZGUgdGhlIHBvcHVwICovXG5cdFx0JCgnYm9keScpLmNzcygncGFkZGluZy1yaWdodCcsICcwJyk7XG4gICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdtb2RhbC1vcGVuJyk7XG4gICAgJCgnI3BvcHVwLWJveCcpLmFuaW1hdGUoe2hlaWdodDogJ2hpZGUnfSwgMTAwKTtcblx0XHQkKCcjYmxhY2tvdXQnKS5oaWRlKCk7XG5cdFx0JCgnaHRtbCcpLnNjcm9sbFRvcChzY3JvbGxQb3MpO1xuXHR9KTtcblx0JCgnLmNsb3NlJykuY2xpY2soZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHNjcm9sbFBvcyA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcblx0XHQvKiBTaW1pbGFybHksIGhpZGUgdGhlIHBvcHVwIGFuZCBibGFja291dCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBjbG9zZSAqL1xuICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnbW9kYWwtb3BlbicpO1xuICAgICQoJyNwb3B1cC1ib3gnKS5hbmltYXRlKHtoZWlnaHQ6ICdoaWRlJ30sIDApO1xuICAgICQoJ2JvZHknKS5jc3MoJ3BhZGRpbmctcmlnaHQnLCAnMCcpO1xuXHRcdCQoJyNibGFja291dCcpLmhpZGUoKTtcblx0XHQkKCdodG1sJykuc2Nyb2xsVG9wKHNjcm9sbFBvcyk7XG5cdH0pO1xufSk7XG5cbihmdW5jdGlvbigkKSB7XG4gICAgJC5mbi5oYXNTY3JvbGxCYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KDApLnNjcm9sbEhlaWdodCA+IHRoaXMuaGVpZ2h0KCk7XG4gICAgfVxufSkoalF1ZXJ5KTtcbiJdfQ==
